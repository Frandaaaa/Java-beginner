第二次作业的相互学习总结：

1. Cq
    MoveZero：实现的思想相同，不过，他用了foreach循环输出，个人对foreach不感冒
    选组长：用了递归，有点难理解。我还需要消化消化。。。
    PrimeChecker：判断是否为质数，他使用了“判断是否能被除1和自身意外的数整除”的方法。在判断数字不大的情况下还行，如果要判断的数字特别大，时间复杂度会上升。我认为只需要判断到该数的开方的位置即可。例如对于质数7，在根号7之前（除1）的数没有一个能整除7，所以根号7之后的数就更不可能去整除7了
    Breakout：每次击打砖块之后，小球速度改变的幅度有点大，还没打几个砖块，整个游戏就变成了一个变态大砖块的游戏了。设置砖块位置的方法要跟我一样都好麻烦。。。实现了击打砖块就加分的功能（十分羡慕）。在检测碰撞部分，写的有点麻烦，可能是没有发现GPoint的其他构造方法。游戏有三次机会，这个设计很人性化，不过即使再给我100次机会，我也通关不了，手动滑稽。

2. gyg
    PrimeChecker：使用的方法和上一位一样。
    Breakout：充分利用了游戏界面的空余处，加了一个计数器。出现了代码不规范，至少前后代码风格不一样（第125行、130行）。把游戏难度升级，用颜色代表砖块等级，等级越高，需要击打的次数越长，击打过后砖块等级降一级。牛批！
    选组长：跟我的思路差不多，不过他是判断数组中对应元素的值是否为0。
    MoveZero：有一个小小的bug，就是输入的如果是小数，就会报错。我也没搞明白咋弄。
    把选组长和移动零放一块，更有交互性。

3. lzy
    PrimeChecker：方法和我一样。出现了代码风格不统一。
    MoveZero：数组输出的方法使用了for循环，我认为直接使用toString会更好吧。消耗的时间应该会少一些。用来两个数组，一个存放非零数，一个存放零，我认为一个数组就够了，只需要把非零数组按顺序放在前面，剩下的默认为零，只需输出即可。
    Breakout：sleep的参数有点大，球运动的时候看起来有些卡顿。”击碎砖块后球的速度变快“这个功能有欠缺，不能每打一个速度都提升，我认为可以打完两行砖块的数量之后速度再提升更好，要不然，像我一样手残的玩家肯定是通关不了的，手动哭泣。
    